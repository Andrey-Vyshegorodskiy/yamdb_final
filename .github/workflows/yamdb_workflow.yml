name: yatube

on: [push]


jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort pytest
          pip install -r requirements.txt
      - name: Test with flake8 and django tests
        run: flake8 . --exclude tests/,*/migrations,venv --per-file-ignores */settings.py:E501 --ignore W503,F811

      - name: Test with pytest
        run: pytest

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          no-cache: true
          tags: markoffdev/yatube:latest

  deploy:
    runs-on: ubuntu-latest
    env:
      PROJECT_ROOT: ~/www/yamdb_final
    needs: build_and_push_to_docker_hub
#    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2

    - name: copy config files for docker end nginx via ssh key
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        target: ${{ env.PROJECT_ROOT }}
        source: 'docker-compose.yaml, nginx/default.conf, static, media'
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          cd ${{ env.PROJECT_ROOT }}
          sudo docker pull markoffdev/yatube:latest
          sudo docker-compose stop
          sudo docker-compose rm web
          sudo docker-compose up -d
  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!
